digraph Segmentation {
	//rankdir = "TB";
	graph [fontsize=10 fontname="Verdana" compound=true];
	node [shape=rect fontsize=10 fontname="Verdana"];
	//ranksep=3;
	//ratio=auto;
	//node [nodesep=0.2 ranksep=0.2];
	//edge [weight=1.2];

	subgraph cluster_runSegmentationSpines {
		color = "black";
		cluster_runSegmentationSpines_dummy [shape=none label = "runSegmentationSpines"]; label = "";
		/*computeElapsedTime*/
		subgraph cluster_ORION3_Spines {
			/*label = "ORION3_Spines";*/
			cluster_ORION3_Spines_dummy -> cluster_computeEigenvaluesGaussianFilter_dummy -> cluster_ORION3_Dedrites_dummy
			cluster_ORION3_Spines_dummy [shape=none label="ORION3_Spines"]; label = "";
			subgraph cluster_computeEigenvaluesGaussianFilter {
				color = "black";
				cluster_computeEigenvaluesGaussianFilter_dummy [shape=none label="computeEigenvaluesGaussianFilter"]; label = "";
				subgraph cluster_FilterTypes {
					label = "Filter types";
					color=blue; /* OR */
					cluster_FilterTypes_dummy [shape=point style=invis];
					FilterFrangi FilterSato FilterORION1
				}
				/*[>cluster_FilterTypes_dummy<] FilterSato -> getInfoVolume [ltail=cluster_FilterTypes]
				getInfoVolume ->
				num2string ->
				RAWfromMHD ->
				WriteRAWandMHD*/
			}
			subgraph cluster_ORION3_Dendrites_callees {
				/*label = "ORION3_Dendrites";*/
				cluster_ORION3_Dedrites_dummy [shape=none label="ORION3_Dendrites"]; label = "";
				cluster_readNegativeSamples_dummy
					-> cluster_compute2D_DiscrimantFunction_dummy
					-> getResponseToDiscriminantFunction
					-> normalizeResponseDiscriminantFunction;
				normalizeResponseDiscriminantFunction ->
				cluster_getFeatures_dummy /*getFeatures*/
				cluster_getFeatures_dummy -> remove_small_conComp3D;

				remove_small_conComp3D ->
					settingDefaultParameters/* ->
					delete_RAW ->
					[>image_MIP_gray ->
					image_MIP_jet -><]
					Read_CreateFolderSecondEigenvalueHessian*/
				subgraph cluster_getFeatures {
					color = "black";
					cluster_getFeatures_dummy  [shape=none label="getFeatures"]; label = "";

					computeFeatures -> readEigenvaluesGaussianFilter
				}
				subgraph cluster_readNegativeSamples {
					color = "black";
					cluster_readNegativeSamples_dummy [shape=none label="readNegativeSamples"]; label = "";
					multiscaleLaplacianFilter -> Makefilter -> hdaf
				}
				subgraph cluster_compute2D_DiscrimantFunction {
					color = "black";
					cluster_compute2D_DiscrimantFunction_dummy [shape=none label="compute2D_DiscrimantFunction"]; label = "";
					removeIsolatedResponses
				}
			}
		}
	}


}

